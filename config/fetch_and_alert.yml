#home_dir - path to local cougarvision repo
home_dir: /home/johnsmith/cougarvision 
email_alerts: True
er_alerts: True
#detector_model - path to detector model
detector_model: /home/johnsmith/cougarvision/detector_models/megadetector.pt
#classifier_model - path to classifier model
classifier_model: /home/johnsmith/cougarvision/classifier_models/EfficientNetB5_456_Unfrozen_05_0.26_0.92.h5 
checkpoint_frequency: -1 
#log_dir - path to logs (must create this folder first)
log_dir: /home/johnsmith/cougarvision/logs/
#classes - path to the class list for the classifier model
classes: /home/johnsmith/cougarvision/labels/sw_classes.txt 
#the emails that will receive email alerts, can be multiple emails
consumer_emails: [<insert emails>]
# the amiul (s) you with to receive the developmemt email alert- contains confidence value of detection
dev_emails: [<insert emails>] 
#threshold confidence score 
confidence: 0.7
#cpu threads
threads: 8
# Web Scraping
#strike force api url
strikeforce_api: https://api.strikeforcewireless.com/api/v2/
#strikeforce wireless username 
username_scraper: [yourusername.cam@gmail.com]
#strikeforce wireless password
password_scraper: [yourpassword]
#authorization token from Strike Force, can be obtained with login credentials and using strikeforceget.py in /cougarvision_utils folder
auth_token: ["<insert account token>"]
#save_dir - path to where the images get stored (must create folder)
save_dir: /home/johnsmith/images/ 
#dictionary containing the strikeforce unique ID with the actual 4 digit camera name, ID can be obtained using strikeforcegetcameras.py within the /cougarvision_utils folder
camera_names: {'<strikeforce id>': <camera name>, ...}  
#animals that the detector will send alerts for if detected (from class list)
alert_targets: [cougar, bobcat, skunk, deer, dog, coyote]
#checkn_interval - time interval between still-alive emails to let us know no errors have crashed
#cougarvision if it's running constantly
checkin_interval: 24
#email to send still-alive email to
admin: admin@email.com 
#x-csrf token retreived from earthranger interactive api example requests, must be logged into an
#existing earthranger account with interactive api access
token: '<insert token>'
#authorization bearer token retreived from same earthranger interactive api example requests 
authorization: 'Bearer <insert authorization>'
